{"version":3,"sources":["Configuration.ts","components/Footer.tsx","api.ts","components/Generate.tsx","components/Header.tsx","helpers/createPnach.ts","helpers/createLine.ts","components/Seed.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["GameMode","useStyles","makeStyles","footer","flexShrink","link","color","textDecoration","left","float","right","Footer","classes","className","Container","Typography","href","target","rel","api","theme","paper","margin","spacing","marginLeft","marginRight","padding","width","marginBottom","worldsWrapper","display","justifyContent","flexWrap","buttonWrapper","textAlign","button","marginTop","Generate","history","useState","loading","setLoading","seed","text","setText","stats","criticalMode","abilities","level50","donaldAbilities","goofyAbilities","formAbilities","simulatedTwilightTown","twilightTown","hollowBastion","cavernOfRemembrance","beastsCastle","olympus","agrabah","landOfDragons","pooh","atlantica","prideLands","disneyCastle","timelessRiver","halloweenTown","portRoyal","spaceParanoids","twtnw","checkbox","setCheckbox","GOA_MOD","gameMode","setGameMode","onTextChange","useCallback","name","value","current","onCheckboxChange","checked","onGameModeChange","event","onChipClick","CheckBox","label","props","FormControlLabel","control","Switch","onChange","WorldChip","Chip","onClick","onSubmit","a","preventDefault","enabled","Object","entries","filter","reduce","result","key","axios","post","response","push","data","console","error","Paper","noValidate","TextField","fullWidth","FormControl","variant","disabled","InputLabel","Select","MenuItem","BASE_GAME","Button","type","Header","align","to","createPnach","item","address","digit","paddedAddress","padStart","toUpperCase","paddedDigit","createLine","location","reward","ConfigProperty","property","children","SpoilerLogRow","description","TableRow","TableCell","colSpan","createStyles","title","spoilerPaper","Seed","match","params","configuration","setConfiguration","seedArray","setSeedArray","spoilerLogs","setSpoilerLogs","setError","useEffect","get","download","pnach","downloadjs","toggleSpoiler","mode","Table","size","TableHead","TableBody","map","content","flex","App","path","component","exact","Boolean","window","hostname","ReactDOM","render","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.d70abd0a.chunk.js","sourcesContent":["export enum GameMode {\n\tBASE_GAME,\n\tGOA_MOD,\n}\n\nexport interface Configuration {\n\tseed: string;\n\n\tgameMode: {\n\t\tmode: GameMode;\n\t\tversion: number;\n\t};\n\n\tstats: boolean;\n\tabilities: boolean;\n\tlevel50: boolean;\n\tdonaldAbilities: boolean;\n\tgoofyAbilities: boolean;\n\tformAbilities: boolean;\n\tcriticalMode: boolean;\n\n\tsimulatedTwilightTown: boolean;\n\ttwilightTown: boolean;\n\thollowBastion: boolean;\n\tcavernOfRemembrance: boolean;\n\tbeastsCastle: boolean;\n\tolympus: boolean;\n\tagrabah: boolean;\n\tlandOfDragons: boolean;\n\tpooh: boolean;\n\tatlantica: boolean;\n\tprideLands: boolean;\n\tdisneyCastle: boolean;\n\ttimelessRiver: boolean;\n\thalloweenTown: boolean;\n\tportRoyal: boolean;\n\tspaceParanoids: boolean;\n\ttwtnw: boolean;\n}\n","import Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\n\nconst useStyles = makeStyles(() => ({\n\tfooter: {\n\t\tflexShrink: 0,\n\t},\n\tlink: {\n\t\tcolor: \"black\",\n\t\ttextDecoration: \"none\",\n\t},\n\tleft: {\n\t\tfloat: \"left\",\n\t},\n\tright: {\n\t\tfloat: \"right\",\n\t},\n}));\n\nexport const Footer: React.FC = () => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<footer className={classes.footer}>\n\t\t\t<Container>\n\t\t\t\t<Typography className={classes.left}>\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"https://github.com/afresquet/kh2fm-randomizer\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\tclassName={classes.link}\n\t\t\t\t\t>\n\t\t\t\t\t\tGitHub\n\t\t\t\t\t</a>\n\t\t\t\t\t{\" - \"}\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"https://github.com/afresquet/kh2fm-randomizer\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\tclassName={classes.link}\n\t\t\t\t\t>\n\t\t\t\t\t\tTwitter\n\t\t\t\t\t</a>\n\t\t\t\t\t{\" - \"}\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"https://github.com/afresquet/kh2fm-randomizer\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\tclassName={classes.link}\n\t\t\t\t\t>\n\t\t\t\t\t\tTwitch\n\t\t\t\t\t</a>\n\t\t\t\t</Typography>\n\n\t\t\t\t<Typography className={classes.right}>\n\t\t\t\t\tSpecial thanks to{\" \"}\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"https://twitter.com/Sonicshadowsil2\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\tclassName={classes.link}\n\t\t\t\t\t>\n\t\t\t\t\t\tSonicshadowsilver2\n\t\t\t\t\t</a>\n\t\t\t\t\t{\", \"}\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"https://twitter.com/desa3579\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\tclassName={classes.link}\n\t\t\t\t\t>\n\t\t\t\t\t\tDesa3579\n\t\t\t\t\t</a>\n\t\t\t\t\t{\" and \"}\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"https://twitter.com/Bizkit047\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\tclassName={classes.link}\n\t\t\t\t\t>\n\t\t\t\t\t\tBizkit047\n\t\t\t\t\t</a>\n\t\t\t\t</Typography>\n\t\t\t</Container>\n\t\t</footer>\n\t);\n};\n","export const api: string =\n\tprocess.env.NODE_ENV === \"production\"\n\t\t? \"https://us-central1-kh2fm-randomizer.cloudfunctions.net/randomizer\"\n\t\t: \"http://localhost:5001/kh2fm-randomizer/us-central1/randomizer\";\n","import Button from \"@material-ui/core/Button\";\nimport Chip from \"@material-ui/core/Chip\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel, {\n\tFormControlLabelProps,\n} from \"@material-ui/core/FormControlLabel\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\nimport TextField from \"@material-ui/core/TextField\";\nimport axios from \"axios\";\nimport React, { useCallback, useState } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { api } from \"../api\";\nimport { Configuration, GameMode } from \"../Configuration\";\nimport { PickByType } from \"../PickByType\";\n\ninterface TCheckbox extends Omit<FormControlLabelProps, \"control\"> {\n\tlabel: string;\n\tname: string;\n\tchecked: boolean;\n}\n\nconst useStyles = makeStyles(theme => ({\n\tpaper: {\n\t\tmargin: theme.spacing(3),\n\t\tmarginLeft: \"auto\",\n\t\tmarginRight: \"auto\",\n\t\tpadding: theme.spacing(3),\n\t\twidth: \"50%\",\n\t},\n\tmarginBottom: {\n\t\tmarginBottom: theme.spacing(3),\n\t},\n\tworldsWrapper: {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"center\",\n\t\tflexWrap: \"wrap\",\n\t\t\"& > *\": {\n\t\t\tmargin: theme.spacing(0.5),\n\t\t},\n\t},\n\tbuttonWrapper: {\n\t\ttextAlign: \"center\",\n\t},\n\tbutton: {\n\t\tmarginTop: theme.spacing(3),\n\t\twidth: \"75%\",\n\t},\n}));\n\nexport const Generate: React.FC<RouteComponentProps> = ({ history }) => {\n\tconst classes = useStyles();\n\n\tconst [loading, setLoading] = useState(false);\n\n\tconst [text, setText] = useState<PickByType<Configuration, string>>({\n\t\tseed: \"\",\n\t});\n\tconst [checkbox, setCheckbox] = useState<PickByType<Configuration, boolean>>({\n\t\tstats: true,\n\t\tcriticalMode: true,\n\t\tabilities: true,\n\t\tlevel50: false,\n\t\tdonaldAbilities: true,\n\t\tgoofyAbilities: true,\n\t\tformAbilities: true,\n\n\t\tsimulatedTwilightTown: true,\n\t\ttwilightTown: true,\n\t\thollowBastion: true,\n\t\tcavernOfRemembrance: true,\n\t\tbeastsCastle: true,\n\t\tolympus: true,\n\t\tagrabah: true,\n\t\tlandOfDragons: true,\n\t\tpooh: true,\n\t\tatlantica: true,\n\t\tprideLands: true,\n\t\tdisneyCastle: true,\n\t\ttimelessRiver: true,\n\t\thalloweenTown: true,\n\t\tportRoyal: true,\n\t\tspaceParanoids: true,\n\t\ttwtnw: true,\n\t});\n\tconst [gameMode, setGameMode] = useState<GameMode>(GameMode.GOA_MOD);\n\n\tconst onTextChange = useCallback(\n\t\t({ target: { name, value } }: React.ChangeEvent<HTMLInputElement>) => {\n\t\t\tsetText(current => ({\n\t\t\t\t...current,\n\t\t\t\t[name]: value,\n\t\t\t}));\n\t\t},\n\t\t[]\n\t);\n\n\tconst onCheckboxChange = useCallback(\n\t\t({ target: { name, checked } }: React.ChangeEvent<HTMLInputElement>) => {\n\t\t\tsetCheckbox(current => {\n\t\t\t\tif (name === \"abilities\" && !checked) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...current,\n\t\t\t\t\t\tabilities: false,\n\t\t\t\t\t\tlevel50: false,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\t...current,\n\t\t\t\t\t[name]: checked,\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\t\t[]\n\t);\n\n\tconst onGameModeChange = useCallback(\n\t\t(\n\t\t\tevent: React.ChangeEvent<{\n\t\t\t\tname?: string | undefined;\n\t\t\t\tvalue: unknown;\n\t\t\t}>\n\t\t) => {\n\t\t\tsetGameMode(event.target.value as GameMode);\n\t\t},\n\t\t[]\n\t);\n\n\tconst onChipClick = useCallback(\n\t\t(name: string) => () => {\n\t\t\tsetCheckbox(current => ({\n\t\t\t\t...current,\n\t\t\t\t[name]: !current[name],\n\t\t\t}));\n\t\t},\n\t\t[]\n\t);\n\n\tconst CheckBox = useCallback(\n\t\t({ label, name, checked, ...props }: TCheckbox) => (\n\t\t\t<div>\n\t\t\t\t<FormControlLabel\n\t\t\t\t\tlabel={label}\n\t\t\t\t\tcontrol={\n\t\t\t\t\t\t<Switch\n\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\tchecked={checked}\n\t\t\t\t\t\t\tonChange={onCheckboxChange}\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t\t{...props}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t),\n\t\t[onCheckboxChange]\n\t);\n\n\tconst WorldChip = useCallback(\n\t\t({ label, name, checked }: TCheckbox) => (\n\t\t\t<Chip\n\t\t\t\tlabel={label}\n\t\t\t\tcolor={checked ? \"primary\" : \"default\"}\n\t\t\t\tonClick={onChipClick(name)}\n\t\t\t/>\n\t\t),\n\t\t[onChipClick]\n\t);\n\n\tconst onSubmit = useCallback(\n\t\tasync (event: React.FormEvent<HTMLFormElement>) => {\n\t\t\ttry {\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tsetLoading(true);\n\n\t\t\t\tconst enabled = Object.entries(checkbox)\n\t\t\t\t\t.filter(([_, value]) => value)\n\t\t\t\t\t.reduce((result, [key, value]) => ({ ...result, [key]: value }), {});\n\n\t\t\t\tconst response = await axios.post<{ seed: string }>(`${api}/seed`, {\n\t\t\t\t\t...text,\n\t\t\t\t\t...enabled,\n\t\t\t\t\tgameMode,\n\t\t\t\t});\n\n\t\t\t\thistory.push(`/seed/${response.data.seed}`);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(error);\n\n\t\t\t\tsetLoading(false);\n\t\t\t}\n\t\t},\n\t\t[text, checkbox, gameMode, history]\n\t);\n\n\treturn (\n\t\t<Paper className={classes.paper}>\n\t\t\t<form noValidate onSubmit={onSubmit}>\n\t\t\t\t<div className={classes.marginBottom}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tname=\"seed\"\n\t\t\t\t\t\tvalue={text.seed}\n\t\t\t\t\t\tlabel=\"Seed (defaults to current time)\"\n\t\t\t\t\t\tonChange={onTextChange}\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className={classes.marginBottom}>\n\t\t\t\t\t<FormControl variant=\"outlined\" fullWidth disabled>\n\t\t\t\t\t\t<InputLabel>Game Mode</InputLabel>\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tvalue={gameMode}\n\t\t\t\t\t\t\tonChange={onGameModeChange}\n\t\t\t\t\t\t\tlabel=\"Game Mode\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<MenuItem value={GameMode.BASE_GAME}>Base Game</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value={GameMode.GOA_MOD}>\n\t\t\t\t\t\t\t\tGarden of Assemblage Mod\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</FormControl>\n\t\t\t\t</div>\n\n\t\t\t\t<div className={classes.marginBottom}>\n\t\t\t\t\t<CheckBox\n\t\t\t\t\t\tlabel=\"Critical Mode\"\n\t\t\t\t\t\tname=\"criticalMode\"\n\t\t\t\t\t\tchecked={checkbox.criticalMode}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<CheckBox\n\t\t\t\t\t\tlabel=\"Randomize Stats\"\n\t\t\t\t\t\tname=\"stats\"\n\t\t\t\t\t\tchecked={checkbox.stats}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<CheckBox\n\t\t\t\t\t\tlabel=\"Randomize Abilities\"\n\t\t\t\t\t\tname=\"abilities\"\n\t\t\t\t\t\tchecked={checkbox.abilities}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<CheckBox\n\t\t\t\t\t\tlabel=\"Cap abilities at level 50 (KH3 style)\"\n\t\t\t\t\t\tname=\"level50\"\n\t\t\t\t\t\tchecked={checkbox.level50}\n\t\t\t\t\t\tdisabled={!checkbox.abilities}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<CheckBox\n\t\t\t\t\t\tlabel=\"Randomize Donald's Abilities\"\n\t\t\t\t\t\tname=\"donaldAbilities\"\n\t\t\t\t\t\tchecked={checkbox.donaldAbilities}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<CheckBox\n\t\t\t\t\t\tlabel=\"Randomize Goofy's Abilities\"\n\t\t\t\t\t\tname=\"goofyAbilities\"\n\t\t\t\t\t\tchecked={checkbox.goofyAbilities}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<CheckBox\n\t\t\t\t\t\tlabel=\"Randomize Form Abilities\"\n\t\t\t\t\t\tname=\"formAbilities\"\n\t\t\t\t\t\tchecked={checkbox.formAbilities}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className={classes.worldsWrapper}>\n\t\t\t\t\t<WorldChip\n\t\t\t\t\t\tlabel=\"Simulated Twilight Town\"\n\t\t\t\t\t\tname=\"simulatedTwilightTown\"\n\t\t\t\t\t\tchecked={checkbox.simulatedTwilightTown}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<WorldChip\n\t\t\t\t\t\tlabel=\"Twilight Town\"\n\t\t\t\t\t\tname=\"twilightTown\"\n\t\t\t\t\t\tchecked={checkbox.twilightTown}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<WorldChip\n\t\t\t\t\t\tlabel=\"Hollow Bastion\"\n\t\t\t\t\t\tname=\"hollowBastion\"\n\t\t\t\t\t\tchecked={checkbox.hollowBastion}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<WorldChip\n\t\t\t\t\t\tlabel=\"Cavern of Remembrance\"\n\t\t\t\t\t\tname=\"cavernOfRemembrance\"\n\t\t\t\t\t\tchecked={checkbox.cavernOfRemembrance}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<WorldChip\n\t\t\t\t\t\tlabel=\"Beast's Castle\"\n\t\t\t\t\t\tname=\"beastsCastle\"\n\t\t\t\t\t\tchecked={checkbox.beastsCastle}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<WorldChip\n\t\t\t\t\t\tlabel=\"Olympus Colisseum\"\n\t\t\t\t\t\tname=\"olympus\"\n\t\t\t\t\t\tchecked={checkbox.olympus}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<WorldChip\n\t\t\t\t\t\tlabel=\"Agrabah\"\n\t\t\t\t\t\tname=\"agrabah\"\n\t\t\t\t\t\tchecked={checkbox.agrabah}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<WorldChip\n\t\t\t\t\t\tlabel=\"Land of Dragons\"\n\t\t\t\t\t\tname=\"landOfDragons\"\n\t\t\t\t\t\tchecked={checkbox.landOfDragons}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<WorldChip\n\t\t\t\t\t\tlabel=\"100 Acre Wood\"\n\t\t\t\t\t\tname=\"pooh\"\n\t\t\t\t\t\tchecked={checkbox.pooh}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<WorldChip\n\t\t\t\t\t\tlabel=\"Atlantica\"\n\t\t\t\t\t\tname=\"atlantica\"\n\t\t\t\t\t\tchecked={checkbox.atlantica}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<WorldChip\n\t\t\t\t\t\tlabel=\"Pride Lands\"\n\t\t\t\t\t\tname=\"prideLands\"\n\t\t\t\t\t\tchecked={checkbox.prideLands}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<WorldChip\n\t\t\t\t\t\tlabel=\"Disne's Castle\"\n\t\t\t\t\t\tname=\"disneyCastle\"\n\t\t\t\t\t\tchecked={checkbox.disneyCastle}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<WorldChip\n\t\t\t\t\t\tlabel=\"Timeless River\"\n\t\t\t\t\t\tname=\"timelessRiver\"\n\t\t\t\t\t\tchecked={checkbox.timelessRiver}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<WorldChip\n\t\t\t\t\t\tlabel=\"Halloween Town\"\n\t\t\t\t\t\tname=\"halloweenTown\"\n\t\t\t\t\t\tchecked={checkbox.halloweenTown}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<WorldChip\n\t\t\t\t\t\tlabel=\"Port Royal\"\n\t\t\t\t\t\tname=\"portRoyal\"\n\t\t\t\t\t\tchecked={checkbox.portRoyal}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<WorldChip\n\t\t\t\t\t\tlabel=\"Space Paranoids\"\n\t\t\t\t\t\tname=\"spaceParanoids\"\n\t\t\t\t\t\tchecked={checkbox.spaceParanoids}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<WorldChip\n\t\t\t\t\t\tlabel=\"The World That Never Was\"\n\t\t\t\t\t\tname=\"twtnw\"\n\t\t\t\t\t\tchecked={checkbox.twtnw}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className={classes.buttonWrapper}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{loading ? \"Generating seed...\" : \"Generate seed\"}\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</Paper>\n\t);\n};\n","import { Container } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles(() => ({\n\tlink: {\n\t\tcolor: \"black\",\n\t\ttextDecoration: \"none\",\n\t},\n}));\n\nexport const Header: React.FC = () => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<header>\n\t\t\t<Container>\n\t\t\t\t<Typography variant=\"h4\" align=\"center\">\n\t\t\t\t\t<Link to=\"/\" className={classes.link}>\n\t\t\t\t\t\tKH2FM Randomizer\n\t\t\t\t\t</Link>\n\t\t\t\t</Typography>\n\t\t\t\t<Typography variant=\"subtitle1\" align=\"center\">\n\t\t\t\t\tby{\" \"}\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"https://github.com/afresquet\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\tclassName={classes.link}\n\t\t\t\t\t>\n\t\t\t\t\t\tAlvaro\n\t\t\t\t\t</a>{\" \"}\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"https://www.twitch.tv/valaxor_\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\tclassName={classes.link}\n\t\t\t\t\t>\n\t\t\t\t\t\t(Valaxor)\n\t\t\t\t\t</a>\n\t\t\t\t</Typography>\n\t\t\t</Container>\n\t\t</header>\n\t);\n};\n","import { SeedArray } from \"../SeedArray\";\nimport { createLine } from \"./createLine\";\n\nexport const createPnach = (seed: SeedArray) => {\n\treturn seed.reduce((result, item) => {\n\t\treturn result + createLine(item.location.value, item.reward.value);\n\t}, \"\");\n};\n","export const createLine = (address: string, digit: string): string => {\n\tconst paddedAddress = address.padStart(8, \"0\").toUpperCase();\n\tconst paddedDigit = digit.padStart(8, \"0\").toUpperCase();\n\n\treturn `patch=1,EE,${paddedAddress},extended,${paddedDigit}\\n`;\n};\n","import Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { CSSProperties } from \"@material-ui/core/styles/withStyles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport downloadjs from \"downloadjs\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { api } from \"../api\";\nimport { Configuration, GameMode } from \"../Configuration\";\nimport { createPnach } from \"../helpers/createPnach\";\nimport { Reward } from \"../Reward\";\nimport { RewardLocation } from \"../RewardLocation\";\nimport { SeedArray } from \"../SeedArray\";\n\nconst ConfigProperty: React.FC<{ property: boolean }> = ({\n\tproperty,\n\tchildren,\n}) => {\n\treturn property ? <Typography>{children}</Typography> : null;\n};\n\nconst SpoilerLogRow: React.FC<{ reward: Reward; location: RewardLocation }> = ({\n\treward,\n\tlocation,\n}) => {\n\treturn location.description && reward ? (\n\t\t<TableRow>\n\t\t\t<TableCell>{location.description}</TableCell>\n\t\t\t<TableCell>{location.type}</TableCell>\n\t\t\t<TableCell colSpan={location.reward.name ? 1 : 2}>\n\t\t\t\t{reward.name}\n\t\t\t</TableCell>\n\t\t\t{location.reward.name ? (\n\t\t\t\t<TableCell>{location.reward.name}</TableCell>\n\t\t\t) : null}\n\t\t</TableRow>\n\t) : null;\n};\n\nconst useStyles = makeStyles(theme => {\n\tconst paper: CSSProperties = {\n\t\tmargin: theme.spacing(3),\n\t\tmarginLeft: \"auto\",\n\t\tmarginRight: \"auto\",\n\t\tpadding: theme.spacing(3),\n\t\twidth: \"50%\",\n\t\ttextAlign: \"center\",\n\t};\n\n\treturn createStyles({\n\t\tpaper,\n\t\ttitle: {\n\t\t\tmarginBottom: theme.spacing(3),\n\t\t},\n\t\tbutton: {\n\t\t\tmarginTop: theme.spacing(3),\n\t\t\twidth: \"75%\",\n\t\t},\n\t\tspoilerPaper: {\n\t\t\t...paper,\n\t\t\twidth: \"auto\",\n\t\t},\n\t});\n});\n\nexport const Seed: React.FC<RouteComponentProps<{ seed: string }>> = ({\n\tmatch: {\n\t\tparams: { seed },\n\t},\n}) => {\n\tconst classes = useStyles();\n\n\tconst [configuration, setConfiguration] = useState<Configuration | null>(\n\t\tnull\n\t);\n\tconst [seedArray, setSeedArray] = useState<SeedArray | null>(null);\n\n\tconst [spoilerLogs, setSpoilerLogs] = useState(false);\n\n\tconst [loading, setLoading] = useState(true);\n\tconst [error, setError] = useState(null);\n\n\tuseEffect(() => {\n\t\t(async function () {\n\t\t\ttry {\n\t\t\t\tconst { data } = await axios.get<{\n\t\t\t\t\tconfiguration: Configuration;\n\t\t\t\t\tseed: SeedArray;\n\t\t\t\t}>(`${api}/seed/${seed}`);\n\n\t\t\t\tsetConfiguration(data.configuration);\n\t\t\t\tsetSeedArray(data.seed);\n\t\t\t} catch (error) {\n\t\t\t\tsetError(error);\n\t\t\t} finally {\n\t\t\t\tsetLoading(false);\n\t\t\t}\n\t\t})();\n\t}, [seed]);\n\n\tconst download = useCallback(async () => {\n\t\ttry {\n\t\t\tif (!seedArray) return;\n\n\t\t\tsetLoading(true);\n\n\t\t\tconst filename = \"F266B00B.pnach\";\n\n\t\t\tconst pnach = createPnach(seedArray);\n\n\t\t\tdownloadjs(pnach, filename, \"application/octet-stream\");\n\t\t} catch (error) {\n\t\t\tsetError(error);\n\t\t} finally {\n\t\t\tsetLoading(false);\n\t\t}\n\t}, [seedArray]);\n\n\tconst toggleSpoiler = useCallback(async () => {\n\t\tsetSpoilerLogs(current => !current);\n\t}, []);\n\n\tif (loading && !configuration) {\n\t\treturn <div>loading...</div>;\n\t} else if (error) {\n\t\tconsole.error(error);\n\t\treturn <div>error</div>;\n\t}\n\n\tif (!configuration || !seedArray) return null;\n\n\tlet gameMode = \"\";\n\tif (configuration.gameMode.mode === GameMode.BASE_GAME) {\n\t\tgameMode = \"Base Game\";\n\t} else if (configuration.gameMode.mode === GameMode.GOA_MOD) {\n\t\tgameMode = \"Garden of Assemblage Mod\";\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Paper variant=\"outlined\" className={classes.paper}>\n\t\t\t\t<div className={classes.title}>\n\t\t\t\t\t<Typography variant=\"h4\">Seed: {configuration.seed}</Typography>\n\t\t\t\t\t<Typography variant=\"h6\">Game Mode: {gameMode}</Typography>\n\t\t\t\t</div>\n\n\t\t\t\t<ConfigProperty property={configuration.criticalMode}>\n\t\t\t\t\tCritical Mode\n\t\t\t\t</ConfigProperty>\n\t\t\t\t<ConfigProperty property={configuration.stats}>\n\t\t\t\t\tRandomize Stats\n\t\t\t\t</ConfigProperty>\n\t\t\t\t<ConfigProperty property={configuration.abilities}>\n\t\t\t\t\tRandomize Abilities\n\t\t\t\t</ConfigProperty>\n\t\t\t\t<ConfigProperty property={configuration.level50}>\n\t\t\t\t\tCap abilities at level 50 (KH3 style)\n\t\t\t\t</ConfigProperty>\n\t\t\t\t<ConfigProperty property={configuration.donaldAbilities}>\n\t\t\t\t\tRandomize Donald's Abilities\n\t\t\t\t</ConfigProperty>\n\t\t\t\t<ConfigProperty property={configuration.goofyAbilities}>\n\t\t\t\t\tRandomize Goofy's Abilities\n\t\t\t\t</ConfigProperty>\n\t\t\t\t<ConfigProperty property={configuration.formAbilities}>\n\t\t\t\t\tRandomize Form Abilities\n\t\t\t\t</ConfigProperty>\n\n\t\t\t\t<ConfigProperty property={configuration.simulatedTwilightTown}>\n\t\t\t\t\tSimulated Twilight Town\n\t\t\t\t</ConfigProperty>\n\t\t\t\t<ConfigProperty property={configuration.twilightTown}>\n\t\t\t\t\tTwilight Town\n\t\t\t\t</ConfigProperty>\n\t\t\t\t<ConfigProperty property={configuration.hollowBastion}>\n\t\t\t\t\tHollow Bastion\n\t\t\t\t</ConfigProperty>\n\t\t\t\t<ConfigProperty property={configuration.cavernOfRemembrance}>\n\t\t\t\t\tCavern of Remembrance\n\t\t\t\t</ConfigProperty>\n\t\t\t\t<ConfigProperty property={configuration.beastsCastle}>\n\t\t\t\t\tBeast's Castle\n\t\t\t\t</ConfigProperty>\n\t\t\t\t<ConfigProperty property={configuration.olympus}>\n\t\t\t\t\tOlympus\n\t\t\t\t</ConfigProperty>\n\t\t\t\t<ConfigProperty property={configuration.agrabah}>\n\t\t\t\t\tAgrabah\n\t\t\t\t</ConfigProperty>\n\t\t\t\t<ConfigProperty property={configuration.landOfDragons}>\n\t\t\t\t\tLand of Dragons\n\t\t\t\t</ConfigProperty>\n\t\t\t\t<ConfigProperty property={configuration.pooh}>\n\t\t\t\t\t100 Acre Wood\n\t\t\t\t</ConfigProperty>\n\t\t\t\t<ConfigProperty property={configuration.atlantica}>\n\t\t\t\t\tAtlantica\n\t\t\t\t</ConfigProperty>\n\t\t\t\t<ConfigProperty property={configuration.prideLands}>\n\t\t\t\t\tPride Lands\n\t\t\t\t</ConfigProperty>\n\t\t\t\t<ConfigProperty property={configuration.disneyCastle}>\n\t\t\t\t\tDisney Castle\n\t\t\t\t</ConfigProperty>\n\t\t\t\t<ConfigProperty property={configuration.timelessRiver}>\n\t\t\t\t\tTimeless River\n\t\t\t\t</ConfigProperty>\n\t\t\t\t<ConfigProperty property={configuration.halloweenTown}>\n\t\t\t\t\tHalloween Town\n\t\t\t\t</ConfigProperty>\n\t\t\t\t<ConfigProperty property={configuration.portRoyal}>\n\t\t\t\t\tPort Royal\n\t\t\t\t</ConfigProperty>\n\t\t\t\t<ConfigProperty property={configuration.spaceParanoids}>\n\t\t\t\t\tSpace Paranoids\n\t\t\t\t</ConfigProperty>\n\t\t\t\t<ConfigProperty property={configuration.twtnw}>\n\t\t\t\t\tThe World That Never Was\n\t\t\t\t</ConfigProperty>\n\n\t\t\t\t<Button\n\t\t\t\t\tonClick={download}\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tclassName={classes.button}\n\t\t\t\t>\n\t\t\t\t\tDownload seed\n\t\t\t\t</Button>\n\n\t\t\t\t<Button\n\t\t\t\t\tonClick={toggleSpoiler}\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tclassName={classes.button}\n\t\t\t\t>\n\t\t\t\t\t{spoilerLogs ? \"Hide\" : \"Show\"} spoiler logs\n\t\t\t\t</Button>\n\t\t\t</Paper>\n\n\t\t\t{spoilerLogs ? (\n\t\t\t\t<Paper className={classes.spoilerPaper} variant=\"outlined\">\n\t\t\t\t\t<Table size=\"small\">\n\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t<TableCell>Location</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>Type</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>Became</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>Original</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t</TableHead>\n\n\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t{seedArray.map(({ reward, location }) => (\n\t\t\t\t\t\t\t\t<SpoilerLogRow\n\t\t\t\t\t\t\t\t\tkey={location.value}\n\t\t\t\t\t\t\t\t\treward={reward}\n\t\t\t\t\t\t\t\t\tlocation={location}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t</Table>\n\t\t\t\t</Paper>\n\t\t\t) : null}\n\t\t</>\n\t);\n};\n","import Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Footer } from \"./components/Footer\";\nimport { Generate } from \"./components/Generate\";\nimport { Header } from \"./components/Header\";\nimport { Seed } from \"./components/Seed\";\n\nconst useStyles = makeStyles(theme => ({\n\tcontent: {\n\t\tpadding: theme.spacing(3),\n\t\tflex: \"1 0 auto\",\n\t},\n}));\n\nfunction App() {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<>\n\t\t\t<div className={classes.content}>\n\t\t\t\t<Header />\n\n\t\t\t\t<main>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route path=\"/\" component={Generate} exact />\n\t\t\t\t\t\t\t<Route path=\"/seed/:seed\" component={Seed} exact />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</Container>\n\t\t\t\t</main>\n\t\t\t</div>\n\n\t\t\t<Footer />\n\t\t</>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<HashRouter basename={\"/\"}>\n\t\t\t<App />\n\t\t</HashRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}